{"version":3,"file":"static/js/441.f0c936e2.chunk.js","mappings":"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","sources":["components/Button.js","components/Input.js","pages/Auth/components/SignupVal.js","pages/Auth/Signup.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: ${(props) => props.width || \"auto\"};\r\n  height: ${(props) => props.height || \"auto\"};\r\n  padding: ${(props) => props.padding || \"7px 15px\"};\r\n  margin: ${(props) => props.margin || 0};\r\n  background-color: ${(props) => props.bgColor || \"#6D94CC\"};\r\n  color: ${(props) => props.color || \"#595959\"};\r\n  font-size: ${(props) => props.fontSize || \"16px\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n\r\n  :disabled {\r\n    background-color: ${(props) => props.disabledBg || \"#ccc\"};\r\n  }\r\n\r\n  :hover {\r\n    border: ${(props) => props.hoverBorder || \"none\"};\r\n    color: ${(props) => props.hoverColor || \"none\"};\r\n  }\r\n`;\r\n\r\nexport default function ButtonComponent(props) {\r\n  return (\r\n    <Button\r\n      onClick={props.method}\r\n      padding={props.padding}\r\n      margin={props.margin}\r\n      bgColor={props.bgColor}\r\n      color={props.color}\r\n      fontSize={props.fontSize}\r\n      border={props.border}\r\n      width={props.width}\r\n      height={props.height}\r\n      disabled={props.disabled}\r\n      disabledBg={props.disabledBg}\r\n      hoverBorder={props.hoverBorder}\r\n      hoverColor={props.hoverColor}\r\n    >\r\n      {props.name}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  width: ${(props) => props.width || \"auto\"};\r\n  height: ${(props) => props.height || \"auto\"};\r\n  padding: ${(props) => props.padding || \"7px 15px\"};\r\n  margin: ${(props) => props.margin || 0};\r\n  background-color: ${(props) => props.bgColor || \"#FDFDFD\"};\r\n  color: ${(props) => props.color || \"#595959\"};\r\n  font-size: ${(props) => props.fontSize || \"16px\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-bottom: ${(props) => props.borderBottom || \"1px solid #7F7F7F\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n\r\n  ::placeholder {\r\n    color: ${(props) => props.color || \"#595959\"};\r\n  }\r\n\r\n  :focus {\r\n    border-bottom: ${(props) => props.focus || \"none\"};\r\n    outline: ${(props) => props.outline || \"none\"};\r\n  }\r\n`;\r\n\r\nexport default function InputComponent(props) {\r\n  return (\r\n    <Input\r\n      onChange={props.method}\r\n      type={props.type}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      padding={props.padding}\r\n      margin={props.margin}\r\n      bgColor={props.bgColor}\r\n      color={props.color}\r\n      fontSize={props.fontSize}\r\n      border={props.border}\r\n      width={props.width}\r\n      height={props.height}\r\n      outline={props.outline}\r\n      focus={props.focus}\r\n      radius={props.radius}\r\n      borderBottom={props.borderBottom}\r\n      required\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../../components/Input\";\r\nimport Button from \"../../../components/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst Alert = styled.p`\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  font-weight: 700;\r\n  color: #6d94cc;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nexport default function SignupVal() {\r\n  // input values\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"password\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"passwordConfirm\");\r\n\r\n  // message\r\n  const [emailMsg, setEmailMsg] = useState(\"\");\r\n  const [passwordMsg, setPasswordMsg] = useState(\"\");\r\n  const [passwordConfirmMsg, setPasswordConfirmMsg] = useState(\"\");\r\n\r\n  const [verifiedEmail, setVerifiedEmail] = useState(false); // 이메일 중복검사 통과 여부 관리\r\n  const [verifiedPassword, setVerifiedPassword] = useState(false); // 비밀번호와 비밀번호 확인창의 입력값 일치여부 관리\r\n  const [disabled, setDisabled] = useState(true); // 버튼 활성화 여부 관리\r\n\r\n  // useState의 비동기 문제 해결을 위해 useEffect안에서 함수를 실행함\r\n  useEffect(() => {\r\n    duplicationCheck();\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    activeBtn();\r\n  }, [verifiedEmail, verifiedPassword, password]);\r\n\r\n  // 이메일 유효성 검증 및 상황에 맞는 안내메시지를 출력하는 함수\r\n  const handleEmail = (e) => {\r\n    const input = e.target.value;\r\n    const regex = new RegExp(\r\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\r\n    );\r\n    // 입력된 값이 이메일 유효성 검증을 통과한 경우\r\n    if (regex.test(input)) {\r\n      setEmail(input);\r\n      // 사용자가 모든 입력값을 제거한 경우\r\n    } else if (input.length < 1) {\r\n      setEmailMsg(\"\");\r\n      setVerifiedEmail(false);\r\n      // 입력된 값이 이메일 유효성 검증을 통과하지 못한 경우\r\n    } else {\r\n      setEmailMsg(\"올바른 이메일 형식을 입력해주세요.\");\r\n      setVerifiedEmail(false);\r\n    }\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    const input = e.target.value;\r\n    const regex = new RegExp(\r\n      /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/\r\n    );\r\n    // 입력된 값이 비밀번호 유효성 검증을 통과한 경우\r\n    if (regex.test(input)) {\r\n      setPassword(input);\r\n      setPasswordMsg(\"안전한 비밀번호 입니다 :)\");\r\n    } else if (input.length < 1) {\r\n      // 사용자가 모든 입력값을 제거한 경우\r\n      setPasswordMsg(\"\");\r\n    } else if (password.length !== passwordConfirm.length) {\r\n      // 비밀번호 입력값과 비밀번호 확인의 입력값이 다를 때 -- 밑이랑 합쳐보자\r\n      setPassword(\"\");\r\n      setPasswordMsg(\"숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.\");\r\n    } else {\r\n      // 입력된 값이 비밀번호 유효성 검증을 통과하지 못한 경우\r\n      setPasswordMsg(\"숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.\");\r\n    }\r\n  };\r\n\r\n  // 비밀번호와 비밀번호 확인창의 입력값이 동일한지 확인하는 함수\r\n  const confirmPassword = (e) => {\r\n    const input = e.target.value;\r\n    // 비밀번호와 비밀번호 확인창의 입력값이 일치\r\n    if (password == input) {\r\n      setPasswordConfirm(input);\r\n      setPasswordConfirmMsg(\"비밀번호가 일치합니다 :)\");\r\n      setVerifiedPassword(true);\r\n    } else if (input.length < 1) {\r\n      // 사용자가 모든 입력값을 제거한 경우\r\n      setPasswordConfirmMsg(\"\");\r\n      setVerifiedPassword(false);\r\n    } else {\r\n      // 비밀번호와 비밀번호 확인창의 입력값이 불일치\r\n      setPasswordConfirmMsg(\"비밀번호가 일치하지않습니다.\");\r\n      setVerifiedPassword(false);\r\n    }\r\n  };\r\n\r\n  // 이메일 중복 검증하는 함수\r\n  const duplicationCheck = async () => {\r\n    const url = \"/api/auth/duplicationCheck\";\r\n    if (email) {\r\n      try {\r\n        const result = await axios.post(url, { val: email });\r\n        setEmailMsg(result.data.msg);\r\n        // 이메일이 중복검사를 통과한 경우\r\n        setVerifiedEmail(true);\r\n      } catch (err) {\r\n        setEmailMsg(err.response.data.msg);\r\n        // 이메일이 중복검사를 통과하지 못한 경우\r\n        setVerifiedEmail(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const SubmitData = async (e) => {\r\n    e.preventDefault();\r\n    const url = \"/api/auth/signup\";\r\n    const val = [email, password];\r\n    try {\r\n      const result = await axios.post(url, {\r\n        val,\r\n      });\r\n      console.log(result);\r\n      // 회원가입 성공 시, 성공 alert을 띄우고 로그인 페이지로 이동\r\n      alert(result.data.msg);\r\n      window.location.href = \"/login\";\r\n    } catch (err) {\r\n      // 회원가입 과정에서 에러가 발생한 경우\r\n      alert(err.response.data.msg);\r\n      // 회원가입 실패시 입력창 비워주기 구현하기\r\n    }\r\n  };\r\n\r\n  // 버튼 활성화 및 비활성화 시키는 함수\r\n  const activeBtn = async () => {\r\n    // 이메일 중복 통과, 비밀번호와 비밀번호 입력창이 입력값이 동일할때만 버튼을 활성화\r\n    verifiedEmail && verifiedPassword && passwordConfirm === password\r\n      ? setDisabled(false)\r\n      : setDisabled(true);\r\n  };\r\n\r\n  return (\r\n    <Form method=\"post\" onSubmit={SubmitData}>\r\n      <Wrap>\r\n        {/* method={handleEmail} 은 onChange={handleEmail}와 동일함 */}\r\n        <Input\r\n          method={handleEmail}\r\n          type=\"email\"\r\n          width=\"100%\"\r\n          height=\"40px\"\r\n          border=\"none\"\r\n          placeholder=\"이메일\"\r\n          focus=\"2px solid #6D94CC\"\r\n        />\r\n        <Alert>{emailMsg}</Alert>\r\n      </Wrap>\r\n      <Wrap>\r\n        <Input\r\n          method={handlePassword}\r\n          type=\"password\"\r\n          width=\"100%\"\r\n          height=\"40px\"\r\n          border=\"none\"\r\n          placeholder=\"비밀번호\"\r\n          focus=\"2px solid #6D94CC\"\r\n        />\r\n        <Alert>{passwordMsg}</Alert>\r\n      </Wrap>\r\n      <Wrap>\r\n        <Input\r\n          method={confirmPassword}\r\n          type=\"password\"\r\n          width=\"100%\"\r\n          height=\"40px\"\r\n          border=\"none\"\r\n          focus=\"2px solid #6D94CC\"\r\n          placeholder=\"비밀번호 확인\"\r\n        />\r\n        <Alert>{passwordConfirmMsg}</Alert>\r\n      </Wrap>\r\n      <Button\r\n        name=\"회원가입\"\r\n        color=\"#fdfdfd\"\r\n        width=\"100%\"\r\n        height=\"40px\"\r\n        margin=\"30px 0 0 0\"\r\n        disabled={disabled}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignupVal from \"./components/SignupVal\";\r\n\r\nconst Cont = styled.div`\r\n  position: absolute;\r\n  width: 350px;\r\n  height: 350px;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n`;\r\n\r\nconst Inner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  color: #6d94cc;\r\n`;\r\n\r\nexport default function Signup() {\r\n  return (\r\n    <Cont>\r\n      <Inner>\r\n        <Link to=\"/\">\r\n          <Logo>Dimple</Logo>\r\n        </Link>\r\n        <SignupVal />\r\n      </Inner>\r\n    </Cont>\r\n  );\r\n}\r\n"],"names":["Button","styled","props","width","height","padding","margin","bgColor","color","fontSize","border","disabledBg","hoverBorder","hoverColor","ButtonComponent","onClick","method","disabled","name","Input","borderBottom","radius","focus","outline","InputComponent","onChange","type","placeholder","value","required","Form","Alert","Wrap","SignupVal","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","emailMsg","setEmailMsg","passwordMsg","setPasswordMsg","passwordConfirmMsg","setPasswordConfirmMsg","verifiedEmail","setVerifiedEmail","verifiedPassword","setVerifiedPassword","setDisabled","useEffect","duplicationCheck","activeBtn","axios","val","result","data","msg","response","SubmitData","e","preventDefault","console","log","alert","window","location","href","onSubmit","input","target","RegExp","test","length","Cont","Inner","Logo","Signup","to"],"sourceRoot":""}